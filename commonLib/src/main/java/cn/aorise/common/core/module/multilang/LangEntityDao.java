//package cn.aorise.common.core.module.multilang;
//
//import android.database.Cursor;
//import android.database.sqlite.SQLiteStatement;
//
//import org.greenrobot.greendao.AbstractDao;
//import org.greenrobot.greendao.Property;
//import org.greenrobot.greendao.internal.DaoConfig;
//import org.greenrobot.greendao.database.Database;
//import org.greenrobot.greendao.database.DatabaseStatement;
//
//import cn.aorise.common.core.module.multilang.entity.LangEntity;
//
//// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
///**
// * DAO for table "LANG_ENTITY".
//*/
//public class LangEntityDao extends AbstractDao<LangEntity, Long> {
//
//    public static final String TABLENAME = "LANG_ENTITY";
//
//    /**
//     * Properties of entity LangEntity.<br/>
//     * Can be used for QueryBuilder and for referencing column names.
//     */
//    public static class Properties {
//        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
//        public final static Property Key = new Property(1, String.class, "key", false, "KEY");
//        public final static Property Value = new Property(2, String.class, "value", false, "VALUE");
//    }
//
//
//    public LangEntityDao(DaoConfig config) {
//        super(config);
//    }
//
//    public LangEntityDao(DaoConfig config, DaoSession daoSession) {
//        super(config, daoSession);
//    }
//
//    @Override
//    protected final void bindValues(DatabaseStatement stmt, LangEntity entity) {
//        stmt.clearBindings();
//
//        Long id = entity.getId();
//        if (id != null) {
//            stmt.bindLong(1, id);
//        }
//        stmt.bindString(2, entity.getKey());
//        stmt.bindString(3, entity.getValue());
//    }
//
//    @Override
//    protected final void bindValues(SQLiteStatement stmt, LangEntity entity) {
//        stmt.clearBindings();
//
//        Long id = entity.getId();
//        if (id != null) {
//            stmt.bindLong(1, id);
//        }
//        stmt.bindString(2, entity.getKey());
//        stmt.bindString(3, entity.getValue());
//    }
//
//    @Override
//    public Long readKey(Cursor cursor, int offset) {
//        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
//    }
//
//    @Override
//    public LangEntity readEntity(Cursor cursor, int offset) {
//        LangEntity entity = new LangEntity( //
//            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
//            cursor.getString(offset + 1), // key
//            cursor.getString(offset + 2) // value
//        );
//        return entity;
//    }
//
//    @Override
//    public void readEntity(Cursor cursor, LangEntity entity, int offset) {
//        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
//        entity.setKey(cursor.getString(offset + 1));
//        entity.setValue(cursor.getString(offset + 2));
//     }
//
//    @Override
//    protected final Long updateKeyAfterInsert(LangEntity entity, long rowId) {
//        entity.setId(rowId);
//        return rowId;
//    }
//
//    @Override
//    public Long getKey(LangEntity entity) {
//        if(entity != null) {
//            return entity.getId();
//        } else {
//            return null;
//        }
//    }
//
//    @Override
//    public boolean hasKey(LangEntity entity) {
//        return entity.getId() != null;
//    }
//
//    @Override
//    protected final boolean isEntityUpdateable() {
//        return true;
//    }
//
//}
